//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieNetWPF.WCFNoteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/MovieNetWCF")]
    [System.SerializableAttribute()]
    public partial class Note : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieEntity_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserEntity_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieEntity_Id {
            get {
                return this.MovieEntity_IdField;
            }
            set {
                if ((this.MovieEntity_IdField.Equals(value) != true)) {
                    this.MovieEntity_IdField = value;
                    this.RaisePropertyChanged("MovieEntity_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserEntity_Id {
            get {
                return this.UserEntity_IdField;
            }
            set {
                if ((this.UserEntity_IdField.Equals(value) != true)) {
                    this.UserEntity_IdField = value;
                    this.RaisePropertyChanged("UserEntity_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFNoteService.INoteService")]
    public interface INoteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/GetNote", ReplyAction="http://tempuri.org/INoteService/GetNoteResponse")]
        MovieNetWPF.WCFNoteService.Note GetNote(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/GetNote", ReplyAction="http://tempuri.org/INoteService/GetNoteResponse")]
        System.Threading.Tasks.Task<MovieNetWPF.WCFNoteService.Note> GetNoteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/CreateNote", ReplyAction="http://tempuri.org/INoteService/CreateNoteResponse")]
        MovieNetWPF.WCFNoteService.Note CreateNote(int note, string comment, int idUser, int idMovie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/CreateNote", ReplyAction="http://tempuri.org/INoteService/CreateNoteResponse")]
        System.Threading.Tasks.Task<MovieNetWPF.WCFNoteService.Note> CreateNoteAsync(int note, string comment, int idUser, int idMovie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/UpdateNote", ReplyAction="http://tempuri.org/INoteService/UpdateNoteResponse")]
        MovieNetWPF.WCFNoteService.Note UpdateNote(int id, int rating, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/UpdateNote", ReplyAction="http://tempuri.org/INoteService/UpdateNoteResponse")]
        System.Threading.Tasks.Task<MovieNetWPF.WCFNoteService.Note> UpdateNoteAsync(int id, int rating, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/DeleteNote", ReplyAction="http://tempuri.org/INoteService/DeleteNoteResponse")]
        bool DeleteNote(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/DeleteNote", ReplyAction="http://tempuri.org/INoteService/DeleteNoteResponse")]
        System.Threading.Tasks.Task<bool> DeleteNoteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/FindNotesOfMovie", ReplyAction="http://tempuri.org/INoteService/FindNotesOfMovieResponse")]
        MovieNetWPF.WCFNoteService.Note[] FindNotesOfMovie(int idMovie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoteService/FindNotesOfMovie", ReplyAction="http://tempuri.org/INoteService/FindNotesOfMovieResponse")]
        System.Threading.Tasks.Task<MovieNetWPF.WCFNoteService.Note[]> FindNotesOfMovieAsync(int idMovie);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INoteServiceChannel : MovieNetWPF.WCFNoteService.INoteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteServiceClient : System.ServiceModel.ClientBase<MovieNetWPF.WCFNoteService.INoteService>, MovieNetWPF.WCFNoteService.INoteService {
        
        public NoteServiceClient() {
        }
        
        public NoteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NoteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MovieNetWPF.WCFNoteService.Note GetNote(int id) {
            return base.Channel.GetNote(id);
        }
        
        public System.Threading.Tasks.Task<MovieNetWPF.WCFNoteService.Note> GetNoteAsync(int id) {
            return base.Channel.GetNoteAsync(id);
        }
        
        public MovieNetWPF.WCFNoteService.Note CreateNote(int note, string comment, int idUser, int idMovie) {
            return base.Channel.CreateNote(note, comment, idUser, idMovie);
        }
        
        public System.Threading.Tasks.Task<MovieNetWPF.WCFNoteService.Note> CreateNoteAsync(int note, string comment, int idUser, int idMovie) {
            return base.Channel.CreateNoteAsync(note, comment, idUser, idMovie);
        }
        
        public MovieNetWPF.WCFNoteService.Note UpdateNote(int id, int rating, string comment) {
            return base.Channel.UpdateNote(id, rating, comment);
        }
        
        public System.Threading.Tasks.Task<MovieNetWPF.WCFNoteService.Note> UpdateNoteAsync(int id, int rating, string comment) {
            return base.Channel.UpdateNoteAsync(id, rating, comment);
        }
        
        public bool DeleteNote(int id) {
            return base.Channel.DeleteNote(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteNoteAsync(int id) {
            return base.Channel.DeleteNoteAsync(id);
        }
        
        public MovieNetWPF.WCFNoteService.Note[] FindNotesOfMovie(int idMovie) {
            return base.Channel.FindNotesOfMovie(idMovie);
        }
        
        public System.Threading.Tasks.Task<MovieNetWPF.WCFNoteService.Note[]> FindNotesOfMovieAsync(int idMovie) {
            return base.Channel.FindNotesOfMovieAsync(idMovie);
        }
    }
}
